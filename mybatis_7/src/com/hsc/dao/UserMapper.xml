<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hsc.dao.UserMapper">
    <!--id 查询用户扩展信息，即返回结果包含两张表的信息，这里用显示内链接。
    user = User{id=1, username='孙悟空', birthday=1980-10-24, sex='男', address='花果山水帘洞', userInfo=null}
    直接进行查询，userinfo表的信息没有映射到返回的user对象中，需要我们手动映射，因此用到resultMap
    -->
    <resultMap id="UserOneUserInfoMap" type="user">
        <!--1.先映射User表中的原有字段
        column：表中的字段，property：javabean中的字段
        主键用id标签，其他用result标签
        2.在建立表连接，映射其他字段-->
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="birthday" property="birthday"/>
        <result column="sex" property="sex"/>
        <result column="address" property="address"/>

        <!--一对一关联关系,User类中包含一个UserInfo类,名称为userInfo，com.hsc.entity.UserInfo别名userinfo-->
        <association property="userInfo" javaType="userinfo">
            <id column="id" property="id"/>
            <result column="height" property="height"/>
            <result column="weight" property="weight"/>
            <result column="married" property="married"/>
        </association>
    </resultMap>
    <select id="findUserAndUserInfo" parameterType="int" resultMap="UserOneUserInfoMap">
        SELECT * FROM user INNER JOIN user_info ON user.id=user_info.id WHERE user.id=#{id};
       </select>
    <!--id 查询用户订单
    一个用户包含多个订单，User类包含存储该订单信息的集合，也需要手动映射-->
    <resultMap id="UserMultipleOrdersMap" type="user">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="birthday" property="birthday"/>
        <result column="sex" property="sex"/>
        <result column="address" property="address"/>
        <!--多表在User中是集合形式：collection，property为集合的名称，javaType为返回类型List,ofType集合泛型-->
        <collection property="orders" javaType="list" ofType="OrderForm">
            <id column="oid" property="oid"/>
            <result column="user_id" property="userId"/>
            <result column="number" property="number"/>
            <result column="create_time" property="createTime"/>
            <result column="note" property="note"/>
        </collection>
    </resultMap>
    <select id="findUserAndOrders" resultMap="UserMultipleOrdersMap">
          SELECT * FROM user INNER JOIN order_form ON user.id=order_form.user_id WHERE user.id=#{id};
    </select>
    <!--一对多查询
     查询用户及用户的所有角色-->
    <resultMap id="UserAndRolesMap" type="user">
        <id property="id" column="id"/>
        <result column="username" property="username"/>
        <result property="birthday" column="birthday"/>
        <result column="sex" property="sex"/>
        <result property="address" column="address"/>
        <!--private List<Role> roles;-->
        <collection property="roles" javaType="List" ofType="role">
            <id column="role_id" property="roleId"/>
            <result column="role_name" property="roleName"/>
            <result column="role_detail" property="roleDetail"/>
        </collection>
    </resultMap>
    <select id="findUserAndRoles" resultMap="UserAndRolesMap">
        SELECT * FROM user INNER JOIN user_role ON user.id=user_role.user_id INNER JOIN role ON user_role.role_id=role.role_id WHERE user.id=#{uid};
    </select>

    <!--查询角色及角色对应的所有用户-->
    <resultMap id="RoleAndUsersMap" type="role">
        <id property="roleId" column="role_id"/>
        <result column="role_name" property="roleName"/>
        <result column="role_detail" property="roleDetail"/>
        <!--private List<User> users;-->
        <collection property="users" ofType="user" javaType="List">
            <id property="id" column="id"/>
            <result column="username" property="username"/>
            <result property="birthday" column="birthday"/>
            <result column="sex" property="sex"/>
            <result property="address" column="address"/>
        </collection>
    </resultMap>
    <select id="findRoleAndUsers" resultMap="RoleAndUsersMap">
        SELECT * FROM role INNER JOIN user_role ON role.role_id=user_role.role_id INNER JOIN USER ON user_role.user_id=user.id WHERE role.role_id=#{id};
    </select>
</mapper>